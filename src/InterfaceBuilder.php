<?php
/**
 * Dirk Benkert (https://www.dirk-benkert.de/)
 *
 * @link  https://gitlab.dirk-benkert.de/ for the canonical source repository
 *
 * For the full copyright and license information, please view the LICENSE.md
 * file that was distributed with this source code.
 */

namespace Vog;


class InterfaceBuilder extends AbstractBuilder
{
    public function __construct(string $name, array $config)
    {
        parent::__construct($name, $config);
        $this->type = "interface";
    }

    public function getPhpCode(): string
    {
        $phpcode = $this->generateGenericPhpHeader();
        $phpcode = $this->closeClass($phpcode);

        return $phpcode;
    }

    protected function generateGenericPhpHeader(): string
    {
        $class_statement = "interface " . ucfirst($this->name);
        $header = <<<EOT
<?php
/** 
 * code generated by vog
 * https://github.com/MarvinWank/vog
 */
declare(strict_types=1);

namespace $this->namespace;

$class_statement
{
EOT;
        return $header;
    }
}