<?php
/** 
 * code generated by vog
 * https://github.com/MarvinWank/vog
 */
declare(strict_types=1);

namespace Test\TestObjects;

use UnexpectedValueException;
use InvalidArgumentException;

final class RecipeSet
{        
    private array $items = [];
        
    private function __construct(array $items)
    {
        $this->items = $items;
    }
    public function equals(?self $other): bool
    {
        $ref = $this->toArray();
        $val = $other->toArray();
                
        return ($ref === $val);
    }

    public function toArray() {
        return $this->items;
    }
    
    public static function fromArray(array $items) {
        return new self($items);
    }

    public function count(): int
    {
        return count($this->items);
    }

    public function add(Recipe $item) {
        $this->items[] = $item;
    }
    
    public function remove(Recipe $item) {
        if(($key = array_search($item, $this->items)) !== false) {
            unset($this->items[$key]);
        }
    }
    
    public function contains(Recipe $item) {
        if(($key = array_search($item, $this->items)) !== false) {
            return true;
        }
        
        return false;
    }
    
}